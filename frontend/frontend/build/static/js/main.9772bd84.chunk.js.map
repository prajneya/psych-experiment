{"version":3,"sources":["components/Welcome/Welcome.js","components/Consent/Consent.js","components/Home/Home.js","components/Game/Game.js","components/Video/Video.js","components/Input/Input.js","components/Final/Final.js","components/Thanks/Thanks.js","App.js","reportWebVitals.js","index.js"],"names":["Welcome","onChange","e","setState","target","name","value","onSubmit","preventDefault","data","state","gender","age","occupation","axios","post","then","res","console","log","window","location","href","catch","err","className","Container","fluid","style","fontSize","Row","Navbar","bg","align","Brand","display","Card","Body","Title","Subtitle","ListGroup","variant","Item","Text","this","Button","type","Component","Consent","Home","experiment_type","_id","placeholder","required","Game","id","useParams","src","frameBorder","scrolling","onClick","Video","useState","et","setEt","url","Input","words","setWords","a","Final","width","chosen_game","ele","document","getElementsByName","i","length","checked","game_chosen","Thanks","App","path","element","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9772bd84.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Button, Navbar, Container, Row, Card, ListGroup, Form  } from 'react-bootstrap';\r\n\r\nclass Welcome extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: '',\r\n      gender: '',\r\n      age: '',\r\n      occupation: '',\r\n    };\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const data = {\r\n      name: this.state.name,\r\n      gender: this.state.age,\r\n      age: this.state.gender,\r\n      occupation: this.state.occupation,\r\n    };\r\n\r\n    axios\r\n      .post('/api/experiment', data)\r\n      .then(res => {\r\n        this.setState({\r\n          name: '',\r\n          age:'',\r\n          gender:'',\r\n          occupation:'',\r\n        })\r\n        console.log(res);\r\n        window.location.href = '/consent';\r\n        })\r\n        .catch(err => {\r\n          console.log(\"Error in Creating Experiment!\", err);\r\n        })\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n    <div className=\"container text-center p-5\">\r\n        <Container fluid style={{ fontSize: 20}}>\r\n            <Row>\r\n                <Navbar bg=\"light\">\r\n                    <Container align=\"center\">\r\n                    <Navbar.Brand href=\"#home\" style={{display:'flex'}}><i>Does gender and age play a role in determining our memory capacity?</i></Navbar.Brand>\r\n                    </Container>\r\n                </Navbar>\r\n            </Row>\r\n            <Row>\r\n                <Card>\r\n                    <Card.Body>\r\n                        <Card.Title>Intro to Psychology</Card.Title>\r\n                        <Card.Subtitle>HS2.202</Card.Subtitle>\r\n                    </Card.Body>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>IIIT-H</ListGroup.Item>\r\n                        <ListGroup.Item>Instructor: Priyanka Srivastava &amp; Vishnu Sreekumar </ListGroup.Item>\r\n                        <ListGroup.Item>Prajneya Kumar | Dayitva Goel | Aman Atman</ListGroup.Item>\r\n                    </ListGroup>\r\n                    <Card.Text>\r\n                        WELCOME TO THE EXPERIMENT\r\n                    </Card.Text>\r\n                </Card>\r\n            </Row>\r\n            <Row>\r\n            <Card>\r\n                <Card.Body>Focus detail – Elaborate the objective of the study. Keep \r\n            in mind that if the elaboration will effect your \r\n            investigation, then in that case conceal the main \r\n            purpose of the study. Inform them about the broad \r\n            focus at the end of the experiment, during debriefing. \r\n            7. Nature of the study – let say if you have four tasks in \r\n            your experiment, inform your participants in advance \r\n            that they will be asked to perform four tasks. Each task \r\n            will be different in nature and will require different time \r\n            to complete the task.</Card.Body>\r\n                </Card>\r\n            </Row>\r\n            <Row>\r\n                <br/>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <Button type=\"submit\" className=\"btn btn-success\"> PROCEED </Button>\r\n                </form>\r\n            </Row>\r\n    </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Welcome;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Consent extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: '',\r\n      gender: '',\r\n      age: '',\r\n      occupation: '',\r\n    };\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const data = {\r\n      name: this.state.name,\r\n      gender: this.state.age,\r\n      age: this.state.gender,\r\n      occupation: this.state.occupation,\r\n    };\r\n\r\n    axios\r\n      .post('/api/experiment', data)\r\n      .then(res => {\r\n        this.setState({\r\n          name: '',\r\n          age:'',\r\n          gender:'',\r\n          occupation:'',\r\n        })\r\n        console.log(res);\r\n        window.location.href = '/home';\r\n        })\r\n        .catch(err => {\r\n          console.log(\"Error in Creating Experiment!\", err);\r\n        })\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container text-center p-5\">\r\n        <h2 align=\"center\">CONSENT FORM</h2>\r\n        <br/>\r\n        <p align=\"justify\">Your participation in this experiment is entirely voluntary. You can choose to withdraw from this study at any point in time. However, for the benefit of the study, please consider in advance whether you are really able to make a full and long-term commitment. The current experiment doesn't involve mental or physical harm.\r\n\r\nAnonymity and Confidentiality\r\n\r\nYour data will be stored with a unique anonymous Participant ID to protect your identity. All data will be kept purely confidential, and will only be used for research purposes. The data will be accessible only to those working on the project.\r\n\r\nParticipant ID\r\n\r\nAt the start of the experiment, you will be asked to enter an identifier called \"Participant ID\". This will help us fully preserve the anonymity of your data while helping us track your progress. It is essential that you choose a unique Participant ID, anonymous (not your name), but one that you will remember easily\r\n\r\nKindly put your Participant ID in the following format: initials of your name with birth date (or PIN CODE) in the end.\r\n\r\nfor eg. Subject ID: AS14 (Name - Akash Singh, birthday-14th Jan).\r\n\r\nAfter taking into account the requirements of this study, if you are ready to contribute, please give your consent by ticking on the checkbox (provided below). We are really grateful for your contribution to our research.\r\n\r\nIf you have any further questions, please contact us at the provided email address. Principal Investigator: prisanka sivttin\r\n\r\nI have read the aforementioned information carefully. Any questions pertaining to this experiment have been answered to my best satisfaction. I hereby voluntarily agree to participate in this project. To proceed, kindly click on \"GO AHEADIT</p>\r\n        <br/>\r\n\r\n        <form onSubmit={this.onSubmit}>\r\n          <button type=\"submit\" className=\"btn btn-success\"> PROCEED </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Consent;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Home extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: '',\r\n      gender: '',\r\n      age: '',\r\n      occupation: '',\r\n    };\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const data = {\r\n      name: this.state.name,\r\n      gender: this.state.age,\r\n      age: this.state.gender,\r\n      occupation: this.state.occupation,\r\n    };\r\n\r\n    axios\r\n      .post('/api/experiment', data)\r\n      .then(res => {\r\n        this.setState({\r\n          name: '',\r\n          age:'',\r\n          gender:'',\r\n          occupation:'',\r\n        })\r\n        console.log(res);\r\n        if(res.data.experiment_type==0 || res.data.experiment_type==1 ){\r\n          window.location.href = '/game/'+res.data._id;\r\n        }\r\n        else{\r\n          window.location.href = '/video/'+res.data._id;\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(\"Error in Creating Experiment!\", err);\r\n      })\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container text-center p-5\">\r\n        <h1>WELCOME TO THE EXPERIMENT</h1>\r\n        <p> Thank you for being part of this experiment. The experiment is a part of a project being done to study the effects of word memorability. The experiment will take around 5 minutes to complete. We appreciate your patience and time taken to be part of this experiment.</p>\r\n        <br/>\r\n        <p>Please follow the instructions on the screen and complete the said tasks. Fill the form below once you are ready. </p>\r\n\r\n        <form onSubmit={this.onSubmit}>\r\n          <div className='form-group'>\r\n            <input\r\n              type='text'\r\n              placeholder='Your Name (Not Necessary)'\r\n              name='name'\r\n              className='form-control'\r\n              value={this.state.name}\r\n              onChange={this.onChange}\r\n            />\r\n          </div>\r\n          <br />\r\n          <div className='form-group'>\r\n            <input\r\n              type='number'\r\n              placeholder='Your Age'\r\n              name='age'\r\n              className='form-control'\r\n              value={this.state.age}\r\n              onChange={this.onChange}\r\n              required \r\n            />\r\n          </div>\r\n          <br />\r\n          <div className='form-group'>\r\n            <p>Gender</p>\r\n             <div onChange={this.onChange}>\r\n              <input type=\"radio\" value=\"MALE\" name=\"gender\" required/> Male  &nbsp; &nbsp;\r\n              <input type=\"radio\" value=\"FEMALE\" name=\"gender\"/> Female\r\n            </div>\r\n          </div>\r\n          <br />\r\n          <div className='form-group'>\r\n            <input\r\n              type='text'\r\n              placeholder='Your Occupation'\r\n              name='occupation'\r\n              className='form-control'\r\n              value={this.state.occupation}\r\n              onChange={this.onChange}\r\n            />\r\n          </div>\r\n          <br />\r\n          <button type=\"submit\" className=\"btn btn-success\"> PROCEED </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport \"./Game.css\"\r\n\r\nfunction Game(){\r\n\r\n  let { id } = useParams();\r\n  console.log(id)\r\n\r\n  function proceed(){\r\n    window.location.href = '/video/'+id;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container text-center p-5\">\r\n      <h1>STEP 1/4: PLAY THE FOLLOWING GAME</h1>\r\n      <p> Thank you for being part of this experiment. The experiment is a part of a project being done to study the effects of word memorability. The experiment will take around 5 minutes to complete. We appreciate your patience and time taken to be part of this experiment.</p>\r\n      <br/>\r\n      <p>Please play the following game once. Press the PROCEED Button once you are done.</p>\r\n\r\n      <iframe className=\"gameArea\" src=\"https://slither.io/\" frameBorder=\"0\" scrolling=\"no\"></iframe>\r\n\r\n      <button className=\"btn btn-success\" onClick={proceed}> PROCEED </button>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n","import React, { Component, useState } from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport ReactPlayer from 'react-player'\r\nimport axios from 'axios';\r\n\r\nfunction Video(){\r\n\r\n  let { id } = useParams();\r\n  console.log(id)\r\n\r\n  const [et, setEt] = useState(\"\");\r\n\r\n  axios\r\n    .post('/api/experiment/getEt', {id: id})\r\n    .then(res => {\r\n      setEt(res.data.experiment_type)\r\n    })\r\n    .catch(err => {\r\n      console.log(\"Error in Submitting Game!\", err);\r\n    })\r\n\r\n  function proceed(){\r\n    window.location.href = '/input/'+id;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container text-center p-5\">\r\n      <h1>{et == 2 || et == 3 ? \"STEP 1/3\" : \"STEP 2/4\" } : WATCH THE FOLLOWING VIDEO</h1>\r\n      <p> Thank you for being part of this experiment. The experiment is a part of a project being done by IIIT-H students to study the effects of word memorability. The experiment will take around 5 minutes to complete. We appreciate your patience and time taken to be part of this experiment.</p>\r\n      <br/>\r\n      <p>Please view the following video once. Try to remember as many words as you can. Press the PROCEED Button once you are done.</p>\r\n\r\n      <div className=\"m-5\">\r\n        {et == 1 || et == 3 ?\r\n          <ReactPlayer className=\"videoPlayer\" url='https://youtu.be/RhqYtiwEn2Q' />\r\n          :\r\n          <ReactPlayer className=\"videoPlayer\" url='https://youtu.be/fxUvN8O8dX0' />\r\n        }\r\n      </div>\r\n\r\n      <button className=\"btn btn-success\" onClick={proceed}> PROCEED </button>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Video;","import React, { Component, useState } from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport ReactPlayer from 'react-player'\r\nimport axios from 'axios';\r\n\r\nfunction Input(){\r\n\r\n  const [words, setWords] = useState(\"\");\r\n\r\n  let { id } = useParams();\r\n  console.log(id)\r\n\r\n  const [et, setEt] = useState(\"\");\r\n\r\n  axios\r\n    .post('/api/experiment/getEt', {id: id})\r\n    .then(res => {\r\n      setEt(res.data.experiment_type)\r\n    })\r\n    .catch(err => {\r\n      console.log(\"Error in Submitting Game!\", err);\r\n    })\r\n\r\n  async function onChange(e){\r\n    await setWords(e.target.value);\r\n    console.log(words)\r\n  };\r\n\r\n  function proceed(){\r\n    axios\r\n      .post('/api/experiment/updateWords', {id: id, words: words})\r\n      .then(res => {\r\n        setWords(\"\");\r\n        console.log(res);\r\n        window.location.href = '/final/'+id;\r\n      })\r\n      .catch(err => {\r\n        console.log(\"Error in Submitting Words!\", err);\r\n      })\r\n    window.location.href = '/final/'+id;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container text-center p-5\">\r\n      <h1>{et == 2 || et == 3 ? \"STEP 2/3\" : \"STEP 3/4\" }: RECALL WORDS</h1>\r\n      <p> Thank you for being part of this experiment. The experiment is a part of a project being done to study the effects of word memorability. The experiment will take around 5 minutes to complete. We appreciate your patience and time taken to be part of this experiment.</p>\r\n      <br/>\r\n      <p>Try to recall as many words as you can and enter them in the box below (space separated). Press the PROCEED Button once you are done.</p>\r\n\r\n      <div className=\"m-5\">\r\n        <textarea className=\"input-area\" value={words} onChange={onChange} required/>\r\n      </div>\r\n\r\n      <button className=\"btn btn-success\" onClick={proceed}> PROCEED </button>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import React, { Component, useState } from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport ReactPlayer from 'react-player'\r\nimport axios from 'axios';\r\n\r\nfunction Final(){\r\n\r\n  let { id } = useParams();\r\n  console.log(id)\r\n\r\n  const [et, setEt] = useState(\"\");\r\n\r\n  axios\r\n    .post('/api/experiment/getEt', {id: id})\r\n    .then(res => {\r\n      setEt(res.data.experiment_type)\r\n    })\r\n    .catch(err => {\r\n      console.log(\"Error in Submitting Game!\", err);\r\n    })\r\n\r\n  function proceed(){\r\n    var chosen_game = \"\";\r\n\r\n    var ele = document.getElementsByName('game');\r\n\r\n    for(var i = 0; i < ele.length; i++) {\r\n        if(ele[i].checked){\r\n          chosen_game = ele[i].value;\r\n          break;\r\n        }\r\n    }\r\n\r\n    if(chosen_game!=\"\"){\r\n      axios\r\n        .post('/api/experiment/updateGame', {id: id, game_chosen: chosen_game})\r\n        .then(res => {\r\n          console.log(res);\r\n          window.location.href = '/thanks/';\r\n        })\r\n        .catch(err => {\r\n          console.log(\"Error in Submitting Game!\", err);\r\n        })\r\n      window.location.href = '/thanks/';\r\n    }\r\n\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"container text-center p-5\">\r\n      <h1>{et == 2 || et == 3 ? \"STEP 3/3\" : \"STEP 4/4\" }: CHOOSE A GAME</h1>\r\n      <p> Thank you for being part of this experiment. The experiment is a part of a project being done by IIIT-H students to study the effects of word memorability. The experiment will take around 5 minutes to complete. We appreciate your patience and time taken to be part of this experiment.</p>\r\n      <br/>\r\n      <p>If you had to choose one of the games to play, which one will you choose? Select a game by clicking on the radio button below and click on the proceed button</p>\r\n\r\n      <div className=\"m-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-6\">\r\n            <img src=\"/Bling.jpeg\" width=\"100%\"/>\r\n            <input type=\"radio\" id=\"bling\" name=\"game\" value=\"BLING\" required/> BLING\r\n          </div>\r\n          <div className=\"col-lg-6\">\r\n            <img src=\"/Tingo.jpeg\" width=\"100%\"/>\r\n            <input type=\"radio\" id=\"tingo\" name=\"game\" value=\"TINGO\"/> TINGO\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <button className=\"btn btn-success\" onClick={proceed}> PROCEED </button>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Final;\r\n","import React, { Component, useState } from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction Thanks(){\r\n\r\n  return (\r\n    <div className=\"container text-center p-5\">\r\n      <h1>THANK YOU!</h1>\r\n      <p> Thank you for being part of this experiment. The experiment is a part of a project being done by IIIT-H students to study the effects of word memorability. The experiment will take around 5 minutes to complete. We appreciate your patience and time taken to be part of this experiment.</p>\r\n      <br/>\r\n      <p>YOU HAVE COMPLETED THIS EXPERIMENT! Please share the link with as many people as you can.</p>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Thanks;\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\r\nimport './App.css';\r\nimport Welcome from './components/Welcome/Welcome';\r\nimport Consent from './components/Consent/Consent';\r\nimport Home from './components/Home/Home';\r\nimport Game from './components/Game/Game';\r\nimport Video from './components/Video/Video';\r\nimport Input from './components/Input/Input';\r\nimport Final from './components/Final/Final';\r\nimport Thanks from './components/Thanks/Thanks';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Routes>\r\n          <Route path='/' element={<Welcome />} exact/>\r\n          <Route path='/consent' element={<Consent />} exact/>\r\n          <Route path='/home' element={<Home />} exact/>\r\n          <Route path='/game/:id' element={<Game/>}  exact/>\r\n          <Route path='/video/:id' element={<Video/>}  exact/>\r\n          <Route path='/input/:id' element={<Input/>}  exact/>\r\n          <Route path='/final/:id' element={<Final/>}  exact/>\r\n          <Route path='/thanks' element={<Thanks/>}  exact/>\r\n        </Routes>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}